// Code generated by MockGen. DO NOT EDIT.
// Source: thirdparty.go

// Package thirdparty is a generated GoMock package.
package thirdparty

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockService is a mock of Service interface.
type MockService struct {
	ctrl     *gomock.Controller
	recorder *MockServiceMockRecorder
}

// MockServiceMockRecorder is the mock recorder for MockService.
type MockServiceMockRecorder struct {
	mock *MockService
}

// NewMockService creates a new mock instance.
func NewMockService(ctrl *gomock.Controller) *MockService {
	mock := &MockService{ctrl: ctrl}
	mock.recorder = &MockServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockService) EXPECT() *MockServiceMockRecorder {
	return m.recorder
}

// GetTransaction mocks base method.
func (m *MockService) GetTransaction(reference, accountID string) (*Transaction, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetTransaction", reference, accountID)
	ret0, _ := ret[0].(*Transaction)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetTransaction indicates an expected call of GetTransaction.
func (mr *MockServiceMockRecorder) GetTransaction(reference, accountID interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetTransaction", reflect.TypeOf((*MockService)(nil).GetTransaction), reference, accountID)
}

// MakePayment mocks base method.
func (m *MockService) MakePayment(req Transaction, ctx context.Context) (*Transaction, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "MakePayment", req, ctx)
	ret0, _ := ret[0].(*Transaction)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// MakePayment indicates an expected call of MakePayment.
func (mr *MockServiceMockRecorder) MakePayment(req, ctx interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "MakePayment", reflect.TypeOf((*MockService)(nil).MakePayment), req, ctx)
}
